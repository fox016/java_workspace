package model;

/** An Item Barcode is a representation of an item's barcode that
 *  was generated by the Home Inventory Tracker. Each item has
 *  exactly one item barcode that uniquely identifies it
 * 
 * @author Nathan Fox
 *
 */

public class ItemBarcode extends Barcode
{
	private static final long serialVersionUID = 1343463344592050610L;
	
	/** Constructor
	 * 
	 * Uses BarcodeGenerator to generate barcode
	 */
	public ItemBarcode()
	{
		assert(true);
		
		barcodeString = BarcodeGenerator.instance().generateBarcode();
	}
	
	/**
	 * Constructor used to get a String from the GUI and transform it
	 * into an ItemBarcode
	 * 
	 * @param value String representation of ItemBarcode
	 * @throws IllegalArgumentException value must be 12 digit numerical value
	 */
	public ItemBarcode(String value) throws IllegalArgumentException
	{
		if(value == null)
			throw new IllegalArgumentException("Item Barcodes cannot be null");
		if(value.length() != 12)
			throw new IllegalArgumentException("Item Barcodes must be 12 chars long");
		if(!value.matches("((-|\\+)?[0-9]+(\\.[0-9]+)?)+"))
			throw new IllegalArgumentException("Item Barcodes must be numeric");
		
		barcodeString = value;
	}
}
