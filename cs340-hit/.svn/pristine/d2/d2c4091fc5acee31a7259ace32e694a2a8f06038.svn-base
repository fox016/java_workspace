
package model.persistence;

import java.sql.PreparedStatement;
import java.sql.SQLException;

import model.StorageUnit;

/** This class is responsible for executing individual sql statements concerning Units
	@author Chris Tensmeyer
	@version March 25 2013
*/

class UnitSql
{
	/** Gets an Unit 
		@param id Specifies which Storage Unit to get
		@return Returns the UnitDataObject for the Unit of id
	*/
	UnitDataObject getUnit(int id) {
		throw new UnsupportedOperationException("Not Implemented");
		}

	/** Stores a newly created Unit in the data persistence model.
		@param udo The UnitDataObject representing the Unit
	*/
	void createUnit(DatabaseUnitDataObject udo) {
		
		try {
			PreparedStatement stmt = DatabaseFacade.instance().connection()
					.prepareStatement(SqlStatement.createUnit);
			stmt.setLong(1, udo.unitId());
			stmt.setString(2, udo.name());
			stmt.executeUpdate();

		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	/** Updates an existing Unit in the data persistence model.
		@param udo The UnitDataObject representing the Unit
	*/
	void updateUnit(DatabaseUnitDataObject udo) {
		deleteUnit(udo);
		createUnit(udo);
		}

	/** Removes an Unit from the data persistence model.
		@param udo The UnitDataObject representing the Unit
	*/
	void deleteUnit(DatabaseUnitDataObject udo) {
		String query = "REMOVE FROM StorageUnit WHERE unitID=?";
		
		try {
			PreparedStatement stmt = DatabaseFacade.instance().connection()
					.prepareStatement(SqlStatement.deleteUnit);
			stmt.setInt(1, udo.unitId());
			stmt.executeUpdate();

		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
		
}

