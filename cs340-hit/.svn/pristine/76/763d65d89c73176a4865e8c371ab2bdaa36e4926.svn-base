
package model.persistence;

import model.*;
import java.sql.*;

/** This class is responsible for initializing the in memory Model from
	the external database
	@author Chris Tensmeyer
	@version March 27 2013
*/

class DatabaseModelLoader
{
	private ResultSet items;
	private ResultSet products;
	private ResultSet groups;
	private ResultSet units;
	private ResultSet tree;
	private ResultSet productAssignments;

	/** Creates a new DatabaseModelLoader */
	DatabaseModelLoader()
	{
	}

	/** This method defines the interface to this object.  Loads the Model into memory from the database 
	 * @throws ClassNotFoundException */ 
	void load()
	{
		Connection connection = null;
		try {
			connection = DatabaseFacade.instance().connection();
		} catch (ClassNotFoundException | SQLException e) {
			e.printStackTrace();
			System.exit(0);
		}
		if(connection == null)
		{
			throw new IllegalStateException("Connection should not be null");
		}
		throw new UnsupportedOperationException("Not Implemented. It's Chris's job now.");
	}

	/** Loads all tables from the database */
	private void getAllTables() throws SQLException
	{ throw new UnsupportedOperationException("Not Implemented"); }

	/** Creates the SU and PG model object tree from the loaded tables */
	private void constructTree()
	{ throw new UnsupportedOperationException("Not Implemented"); }

	/** Creates all of the Product model obejcts */
	private void constructProducts()
	{ throw new UnsupportedOperationException("Not Implemented"); }

	/** Uses productAssignments to construct the mapping from PC to Products in the model objects */
	private void assignProducts()
	{ throw new UnsupportedOperationException("Not Implemented"); }
	
	/** Populates the Model with all of the Items */
	private void assignItems()
	{ throw new UnsupportedOperationException("Not Implemented"); }
}

